version: "3"
services:
    db:
        image: postgres
        container_name: db
        environment:
            POSTGRES_PASSWORD: ${DB_PASS}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_DB: ${DB}
            DATABASE_URL: ${DB_URL}
        ports:
            - "5432:5432"
        networks:
            - puma-network
    project-service:
        container_name: project-service
        environment:
            ENVIRONMENT: dev
        build:
            context: ../${PROJECT_PATH}/
            dockerfile: dev.Dockerfile
        ports:
            - "3000:3000"
        depends_on:
            - db
        volumes:
            - ../${PROJECT_PATH}:/app
            - /app/node_modules
        networks:
            - puma-network
    user-service:
        container_name: user-service
        environment:
            ENVIRONMENT: dev
        build:
            context: ../${USER_PATH}/
            dockerfile: dev.Dockerfile
        ports:
            - "3001:3001"
        depends_on:
            - db
        volumes:
            - ../${USER_PATH}:/app
            - /app/node_modules
        networks:
            - puma-network
    # external-service:
    #     container_name: external-service
    #     environment:
    #         ENVIRONMENT: dev
    #     build:
    #         context: ../${EXTERNAL_PATH}/
    #         dockerfile: dev.Dockerfile
    #     ports:
    #         - "3007:3007"
    #     depends_on:
    #         - db
    #     volumes:
    #         - ../${EXTERNAL_PATH}:/app
    #         - /app/node_modules
    #     networks:
    #         - puma-network
    api-gateway:
        container_name: api-gateway
        environment:
            ENVIRONMENT: dev
        build:
            context: .
            dockerfile: dev.Dockerfile
        ports:
            - "3004:3004"
        volumes:
            - ./:/app
            - /app/node_modules
        networks:
            - puma-network
    # frontend:
    #     container_name: frontend
    #     environment:
    #         ENVIRONMENT: dev
    #     build:
    #         context: ../${FRONT_PATH}/puma
    #         dockerfile: dev.Dockerfile
    #     ports:
    #         - "8080:8080"
    #     volumes:
    #         - ../${FRONT_PATH}/puma:/app
    #         - /app/node_modules
    #     networks:
    #         - puma-network
            
networks:
    puma-network:            
